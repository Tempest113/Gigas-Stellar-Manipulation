#site
stellar_manipulator_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	place_entity_on_planet_plane = no
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -7 y = -7 }
	build_time = 1260
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			unity = @giga_kilo_unity_cost
		}
		upkeep = {
			energy = 5
		}
	}
	construction_blocks_and_blocked_by = none
	prerequisites = {
		"tech_gigas_stellar_manip_2"
	}
	possible = {
		from = {
			is_ai = no
		}
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}
	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				has_anomaly = no
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				planet_has_no_megastructure = yes
			}
			custom_tooltip = {
				fail_text = "requires_survey_not_habitable"
				is_surveyed = {
					who = prev.from
					status = yes
				}
				is_planet_habitable = no
			}
			custom_tooltip = {
				fail_text = "requires_standard_planet_class"
				stellar_manip_is_valid_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_habitable_planets"
				NOT = {
					solar_system = {
						any_system_planet = {
							is_planet_habitable = yes
						}
					}
				}
			}
		}
	}
	ai_weight = {
		factor = 10
		#maybe i should actually make weights for once, maybe not
	}
	on_build_complete = {
		save_event_target_as = star_manip_system
		fromfrom = { save_event_target_as = star_manip_mega }

		create_message = {
			type = MESSAGE_STELLAR_MANIPULATOR_SITE_BUILT
			localization = MESSAGE_STELLAR_MANIPULATOR_SITE_BUILT
			days = @toast_message_days
			target = event_target:star_manip_system

		}

		fromfrom.planet = {
			set_planet_flag = has_megastructure
			set_planet_flag = megastructure
			set_planet_flag = star_manip_target
			save_event_target_as = star_manip_planet
		}

		# REPLACED BY MESSAGE/TOAST
		# owner = {
		# 	country_event = {
		# 		id = stellar_manip.101
		# 	}
		# }
	}
}

#full
stellar_manipulator_1 = {
	entity = "stellar_manip_full_nobeam_entity"
	construction_entity = "stellar_manip_full_nobeam_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	build_time = 1260
	resources = {
		category = megastructures
		cost = {
			unity = @giga_mega_unity_cost
			alloys = 5000
		}
		upkeep = {
			energy = 25
		}
	}
	upgrade_from = {
		stellar_manipulator_0
	}
	prerequisites = {
		"tech_gigas_stellar_manip_2"
	}

	on_build_complete = {
		save_event_target_as = star_manip_system
		fromfrom = { save_event_target_as = star_manip_mega }

		create_message = {
			type = MESSAGE_STELLAR_MANIPULATOR_BUILT
			localization = MESSAGE_STELLAR_MANIPULATOR_BUILT
			days = @toast_message_days
			target = event_target:star_manip_system

		}

		# REPLACED BY MESSAGE/TOAST
		# owner = {
		# 	country_event = {
		# 		id = stellar_manip.102
		# 	}
		# }

		if = {
			limit = {
				fromfrom.planet = {
					giga_is_o_star_for_megas = yes
				}
			}
			fromfrom.planet = {
				save_event_target_as = star_manip_planet
			}
			spawn_megastructure = {
				type = stellar_manipulator_o_1
				planet = event_target:star_manip_planet
				owner = fromfrom.owner
			}
			remove_megastructure = fromfrom
		}

	}
}

#harvester
stellar_manipulator_2 = {
	entity = "stellar_manip_full_entity"
	construction_entity = "stellar_manip_full_entity"
	portrait = "GFX_star_manip_01_background"
	build_time = 1260
	upgrade_from = { stellar_manipulator_1 }

	resources = {
		category = megastructures
		cost = {
			energy = 5000
			unity = 500
		}

		upkeep = {
			energy = 250
		}
	}

	possible = {
		custom_tooltip = {
			text = stellar_manip_no_ignited_stars
			event_target:star_manip_planet = {
				NOT = {
					is_planet_class = pc_gigaignited_star
					# has_planet_flag = star_manip_target
				}
			}
		}
	}

	on_build_complete = {
		save_event_target_as = star_manip_system
		fromfrom = { save_event_target_as = star_manip_mega }

		create_message = {
			type = MESSAGE_STELLAR_HARVESTER_BUILT
			localization = MESSAGE_STELLAR_HARVESTER_BUILT
			days = @toast_message_days
			target = event_target:star_manip_system

		}

		if = {
			limit = {
				owner = {
					NOR = {
						has_country_flag = restarted_harvester
						has_country_flag = auto_harvester
					}
				}
			}
			# REPLACED BY MESSAGE/TOAST
			# owner = {
			# 	country_event = {
			# 		id = stellar_manip.103
			# 	}
			# }
		}

		owner = {
			remove_country_flag = auto_harvester
			remove_country_flag = restarted_harvester
		}

		fromfrom = {
			save_event_target_as = star_harvester
		}
		fromfrom.planet = {
			save_event_target_as = star_being_harvested
		}
		if = {
			limit = {
				exists = from
				from = {
					NOT = {
						any_situation = {
							is_situation_type = situation_stellar_extraction
							target = {
								is_same_value = root.fromfrom.planet
							}
						}
					}
				}
			}
			from = {
				start_situation = {
					type = situation_stellar_extraction
					target = root.fromfrom.planet
				}
			}
		}

	}
}

#injector
stellar_manipulator_3 = {
	entity = "stellar_manip_full_entity"
	construction_entity = "stellar_manip_full_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	build_time = 1260
	resources = {
		category = megastructures
		cost = {
			energy = 5000
			unity = 500
		}
		upkeep = {
			energy = 150
		}
	}

	upgrade_from = {
		stellar_manipulator_1
	}

	ai_weight = {
		factor = 1
		#maybe i should actually make weights for once, maybe not
	}
	on_build_complete = {
		save_event_target_as = star_manip_system
		fromfrom = { save_event_target_as = star_injector }

		create_message = {
			type = MESSAGE_STELLAR_INJECTOR_BUILT
			localization = MESSAGE_STELLAR_INJECTOR_BUILT
			days = @toast_message_days
			target = event_target:star_manip_system

		}

		if = {
			limit = {
				owner = {
					OR = {
						has_country_flag = restarted_injector
						has_country_flag = auto_injector
					}
				}
			}
			owner = {
				remove_country_flag = restarted_injector
				remove_country_flag = auto_injector
			}
		}

		# REPLACED BY MESSAGE/TOAST
		# else = {
		# 	save_event_target_as = star_manip_system
		# 	owner = {
		# 		country_event = {
		# 			id = stellar_manip.104
		# 		}
		# 	}
		# }

		fromfrom.planet = {
			save_event_target_as = star_being_injected
		}

		if = {
			limit = {
				exists = from
				from = {
					NOT = {
						any_situation = {
							is_situation_type = situation_stellar_infusion
							target = {
								is_same_value = root.fromfrom.planet
							}
						}
					}
				}
			}
			from = {
				start_situation = {
					type = situation_stellar_infusion
					target = root.fromfrom.planet
				}
			}
		}

	}
}

#o class full
stellar_manipulator_o_1 = {
	entity = "stellar_manip_o_full_nobeam_entity"
	construction_entity = "stellar_manip_full_nobeam_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	resources = {
		category = megastructures
		upkeep = {
			energy = 50
		}
	}
	potential = {
		always = no
	}
}

#o harvester
stellar_manipulator_o_2 = {
	entity = "stellar_manip_o_full_entity"
	construction_entity = "stellar_manip_full_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	build_time = 1260
	resources = {
		category = megastructures
		cost = {
			energy = 10000
			unity = @giga_kilo_unity_cost
		}

		upkeep = {
			energy = 250
		}
	}
	upgrade_from = {
		stellar_manipulator_o_1
	}
	ai_weight = {
		factor = 10
	}
	on_build_complete = {
		save_event_target_as = star_manip_system

		# REPLACED BY MESSAGE/TOAST
		# owner = {
		# 	country_event = {
		# 		id = stellar_manip.103
		# 	}
		# }
		fromfrom = {
			save_event_target_as = star_harvester
		}
		fromfrom.planet = {
			save_event_target_as = star_being_harvested
			# planet_event = { id = stellar_manip.1002 days = 1460 } #4 years 1460
		}
		if = {
			limit = {
				exists = from
			}
			from = {
				start_situation = {
					type = situation_stellar_extraction
					target = root.fromfrom.planet
				}
			}
		}
	}
}

#disabled injector
stellar_manipulator_off = {
	entity = "stellar_manip_full_nobeam_entity"
	construction_entity = "stellar_manip_full_nobeam_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	potential = {
		always = no
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 15
		}
	}
	on_build_complete = {
		if = {
			limit = {
				not = {
					has_star_flag = stellarm_tempt_dont_abort
				}
				fromfrom = {
					exists = planet
				}
			}
			every_country = {
				limit = {
					any_situation = {
						exists = target
						OR = {
							is_situation_type = situation_stellar_extraction
							is_situation_type = situation_stellar_infusion
						}
						target = {
							is_same_value = root.fromfrom.planet
						}
					}
				}
				every_situation = {
					limit = {
						exists = target
						OR = {
							is_situation_type = situation_stellar_extraction
							is_situation_type = situation_stellar_infusion
						}
						target = {
							is_same_value = root.fromfrom.planet
						}
					}
					abort_situation = this
				}
			}
		}
	}
}

stellar_manipulator_on = {
	entity = "stellar_manip_full_entity"
	construction_entity = "stellar_manip_full_nobeam_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	resources = {
		category = megastructures
		upkeep = {
			energy = 150
		}
		cost = {
			sr_stellar_plasma = 100
			energy = 5000
		}
	}
	upgrade_from = {
		stellar_manipulator_off
	}
	build_time = 30
	on_build_complete = {
		owner = {
			set_country_flag = restarted_injector
		}
		fromfrom.planet = {
			save_event_target_as = star_manip_planet
		}
		spawn_megastructure = {
			type = stellar_manipulator_3
			planet = event_target:star_manip_planet
			owner = fromfrom.owner
		}
		remove_megastructure = fromfrom
		if = {
			limit = {
				exists = from
			}
			from = {
				start_situation = {
					type = situation_stellar_infusion
					target = root.fromfrom.planet
				}
			}
		}
	}
}

#disabled harvester
stellar_harvester_off = {
	entity = "stellar_manip_full_nobeam_entity"
	construction_entity = "stellar_manip_full_nobeam_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	potential = {
		always = no
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 15
		}
	}
	on_build_complete = {
		if = {
			limit = {
				not = {
					has_star_flag = stellarm_tempt_dont_abort
				}
				fromfrom = {
					exists = planet
				}
			}
			every_country = {
				limit = {
					any_situation = {
						exists = target
						OR = {
							is_situation_type = situation_stellar_extraction
							is_situation_type = situation_stellar_infusion
						}
						target = {
							is_same_value = root.fromfrom.planet
						}
					}
				}
				every_situation = {
					limit = {
						exists = target
						OR = {
							is_situation_type = situation_stellar_extraction
							is_situation_type = situation_stellar_infusion
						}
						target = {
							is_same_value = root.fromfrom.planet
						}
					}
					abort_situation = this
				}
			}
		}
	}
}

stellar_harvester_on = {
	entity = "stellar_manip_full_entity"
	construction_entity = "stellar_manip_full_nobeam_entity"
	portrait = "GFX_star_manip_01_background"
	place_entity_on_planet_plane = yes
	resources = {
		category = megastructures
		upkeep = {
			energy = 150
		}
		cost = {
			energy = 5000
		}
	}
	upgrade_from = {
		stellar_harvester_off
	}
	build_time = 30
	on_build_complete = {
		owner = {
			set_country_flag = restarted_harvester
		}
		fromfrom.planet = {
			save_event_target_as = star_manip_planet
		}
		spawn_megastructure = {
			type = stellar_manipulator_2
			planet = event_target:star_manip_planet
			owner = fromfrom.owner
		}
		remove_megastructure = fromfrom
		if = {
			limit = {
				exists = from
			}
			from = {
				start_situation = {
					type = situation_stellar_extraction
					target = root.fromfrom.planet
				}
			}
		}
	}
}
